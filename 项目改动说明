1.首先通过kmeans对数据进行聚类，获得个样本的聚类中心，根据聚类中心对样本进行初步的划分标签

3.将抽取出的特征输入kmeans聚类，并生成预测标签

4.迭代6次后用最终预测值进行评估准确率

5.项目采用多次实验取平均值的方式来评估最终结果

改动部分
1.改动了一下编码器，修改了损失函数，添加了对隐层的kl散度约束，使隐层具备稀疏性，编码器修改relu为sigmoid激活函数，主要是我看很少用relu的

2.对模型结构添加了可视化输出,但是如果win要用比较麻烦一点，我的win还没弄，就没有进行可视化输出，
如果不用的话，把autoencouder里面的plot_out写成False就没事了。
通常情况下，安装可视化输出，需要安装pydotplus和graphviz，
pip install pydotplus
pip install graphviz
调用的是keras.utils.plot_model

然后我看传统的可视化输出是pydot，但是这两年不支持了，需要换成pydotplus
好像不同系统不一样吧，你看下你的

3.对模型训练过程做了细微调整,修改优化器为Nadam，效果更好 ，这个完全是试一试。https://blog.csdn.net/u012759136/article/details/52302426/
但是效果还很好

4.添加了模型的调用接口，可以输出并查看中间层的结果，也可调用预测
增加了聚类标签匹配的函数用于还原聚类标签,采用了kuhn-Murunkres算法映射聚类标签

(pip install munkres)该包实现了聚类与实际标签的映射算法

5.根据acc保留最优权重  例如排序算法吧









