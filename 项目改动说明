原项目采用6层堆叠去噪自编码器，实现了对手写字数据集的无监督学习

项目原理解析
1.首先通过kmeans对数据进行聚类，获得个样本的聚类中心，根据聚类中心对样本进行初步的划分标签

2.将上层编码器结果输入下层自编码器，由编码器进一步提取特征
    第一层 编码器 输入维度为x的数据维度 -> 编码器输出维度500 -> 解码器输出为x的数据维度

    第二层 编码器 输入第一层编码的输出，训练维度为500 -> 编码器输出维度500 -> 输出维度500

    第三层 编码器 输入第二层编码的输出，训练维度为500 -> 编码器输出维度500 -> 输出维度500

    第四层 编码器 输入第三层编码的输出，训练维度为500 -> 编码器输出维度500 -> 输出维度500

    第五层 编码器 输入第三层编码的输出，训练维度为500 -> 编码器输出维度2000 -> 输出维度500

    第六层 编码器 输入第三层编码的输出，训练维度为2000 -> 编码器输出维度10 -> 输出维度2000
可查看模型图进一步了解结构

3.将抽取出的特征输入kmeans聚类，并生成预测标签

4.迭代6次后用最终预测值进行评估准确率

5.项目采用多次实验取平均值的方式来评估最终结果

改动部分
1.修改了损失函数，添加了对隠层的kl散度约束，使隠层具备稀疏性，编码器修改relu为sigmoid激活函数


2.对关键代码添加中文注释，对模型结构添加了可视化输出
（调用了keras.utils.plot_model，用于输出模型结构，如果报错或者嫌安装麻烦可以将autoencoder的plot_out设置为False，
sudo apt-get install graphviz
pip install pydotplus
pip install graphviz
最后修改keras.utils.vis_utils中的所有pydot为pydotplus，ctrl+R替换全部就好
支持ubuntu，不支持为win0，win10配置不同
）

3.对模型训练过程做了细微调整,修改优化器为Nadam，效果更好

4.添加了模型的调用接口，可以输出并查看中间层的结果，也可调用预测
增加了聚类标签匹配的函数用于还原聚类标签,采用了kuhn-Murunkres算法映射聚类标签

(pip install munkres)该包实现了聚类与实际标签的映射算法

5.根据acc保留最优权重

6.附带讲解ppt









